.custom-container {
    /* Position and center the image to scale nicely on all screens */
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
    position: relative;
}

.top-radius-bg {
    border-radius: 100% 100% 0 0 / 100% 100% 0 0;
    height: 4rem;
    @include media-breakpoint-only(lg) {
        height: 6.5rem;
    }
    @include media-breakpoint-only(xl) {
        //height: 5rem;
    }
}

.bottom-radius-bg {
    border-radius: 0 0 100% 100% / 0 0 100% 100%;
    height: 4rem;
    @include media-breakpoint-only(lg) {
        height: 6.5rem;
    }
    @include media-breakpoint-only(xl) {
       // height: 0;
    }
}

// Container widths
//
// Set the container width, and override it for fixed navbars in media queries.
// Single container class with breakpoint max-widths
.container,
// 100% wide container at all breakpoints
.container-fluid {
    @include make-container();
}

// Responsive containers that are 100% wide until a breakpoint
@each $breakpoint,
$container-max-width in $container-max-widths {
    .container-#{$breakpoint} {
        @extend .container-fluid;
    }
    @include media-breakpoint-up($breakpoint, $grid-breakpoints) {
        %responsive-container-#{$breakpoint} {
            max-width: $container-max-width;
        }
        // Extend each breakpoint which is smaller or equal to the current breakpoint
        $extend-breakpoint: true;
        @each $name,
        $width in $grid-breakpoints {
            @if ($extend-breakpoint) {
                .container#{breakpoint-infix($name, $grid-breakpoints)} {
                    @extend %responsive-container-#{$breakpoint};
                }
                // Once the current breakpoint is reached, stop extending
                @if ($breakpoint==$name) {
                    $extend-breakpoint: false;
                }
            }
        }
    }
}